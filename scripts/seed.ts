import { getDatabase } from '../src/lib/mongodb';
import bcrypt from 'bcryptjs';

async function seedDatabase() {
  try {
    const db = await getDatabase();

    console.log('üå± Starting database seeding...');

    // Clear existing data
    await db.collection('users').deleteMany({});
    await db.collection('products').deleteMany({});
    await db.collection('suppliers').deleteMany({});
    await db.collection('provinces').deleteMany({});
    await db.collection('districts').deleteMany({});
    await db.collection('wards').deleteMany({});

    // Create admin user
    const hashedPassword = await bcrypt.hash('admin123', 12);
    const adminUser = await db.collection('users').insertOne({
      email: 'admin@vncompare.com',
      password: hashedPassword,
      name: 'Admin User',
      phone: '+84901234567',
      role: 'admin',
      createdAt: new Date(),
      lastLoginAt: new Date(),
    });

    console.log('‚úÖ Created admin user:', adminUser.insertedId);

    // Create sample customer
    const customerPassword = await bcrypt.hash('customer123', 12);
    const customer = await db.collection('users').insertOne({
      email: 'customer@example.com',
      password: customerPassword,
      name: 'John Doe',
      phone: '+84987654321',
      role: 'customer',
      createdAt: new Date(),
    });

    console.log('‚úÖ Created customer user:', customer.insertedId);

    // Create sample products
    const products = [
      {
        name: 'S∆°n Dulux Weathershield',
        brand: 'Dulux',
        category: 'S∆°n ngo·∫°i th·∫•t',
        description: 'S∆°n ch·ªëng th·∫•m cao c·∫•p cho t∆∞·ªùng ngo√†i',
        basePrice: 450000,
        originalPrice: 500000,
        coverageRate: 12,
        unit: 'liter',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'S∆°n Jotun Lady',
        brand: 'Jotun',
        category: 'S∆°n n·ªôi th·∫•t',
        description: 'S∆°n n·ªôi th·∫•t kh√¥ng m√πi, th√¢n thi·ªán m√¥i tr∆∞·ªùng',
        basePrice: 380000,
        originalPrice: 420000,
        coverageRate: 14,
        unit: 'liter',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'S∆°n Kova',
        brand: 'Kova',
        category: 'S∆°n n·ªôi th·∫•t',
        description: 'S∆°n n·ªôi th·∫•t ch·∫•t l∆∞·ª£ng cao, gi√° c·∫£ h·ª£p l√Ω',
        basePrice: 320000,
        originalPrice: 350000,
        coverageRate: 13,
        unit: 'liter',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        name: 'S∆°n Nippon Paint',
        brand: 'Nippon Paint',
        category: 'S∆°n ngo·∫°i th·∫•t',
        description: 'S∆°n ngo·∫°i th·∫•t ch·ªëng UV, b·ªÅn m√†u',
        basePrice: 520000,
        originalPrice: 580000,
        coverageRate: 11,
        unit: 'liter',
        isActive: true,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ];

    const insertedProducts = await db
      .collection('products')
      .insertMany(products);
    console.log('‚úÖ Created products:', insertedProducts.insertedCount);

    // Create sample suppliers
    const suppliers = [
      {
        name: 'C√¥ng ty TNHH S∆°n Vi·ªát',
        email: 'contact@sonviet.com',
        phone: '+84901234567',
        address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
        businessInfo: {
          license: '0123456789',
          taxCode: '0123456789',
        },
        contactInfo: {
          contactPerson: 'Nguy·ªÖn VƒÉn A',
          position: 'Gi√°m ƒë·ªëc',
        },
        isVerified: true,
        createdAt: new Date(),
      },
      {
        name: 'Nh√† ph√¢n ph·ªëi S∆°n ƒê√¥ng √Å',
        email: 'info@sondonga.com',
        phone: '+84987654321',
        address: '456 ƒê∆∞·ªùng XYZ, Qu·∫≠n 2, TP.HCM',
        businessInfo: {
          license: '9876543210',
          taxCode: '9876543210',
        },
        contactInfo: {
          contactPerson: 'Tr·∫ßn Th·ªã B',
          position: 'Tr∆∞·ªüng ph√≤ng kinh doanh',
        },
        isVerified: true,
        createdAt: new Date(),
      },
      {
        name: 'C·ª≠a h√†ng V·∫≠t li·ªáu x√¢y d·ª±ng Minh T√¢n',
        email: 'minhtan@example.com',
        phone: '+84912345678',
        address: '789 ƒê∆∞·ªùng DEF, Qu·∫≠n 3, TP.HCM',
        businessInfo: {
          license: '1122334455',
          taxCode: '1122334455',
        },
        contactInfo: {
          contactPerson: 'L√™ VƒÉn C',
          position: 'Ch·ªß c·ª≠a h√†ng',
        },
        isVerified: false,
        createdAt: new Date(),
      },
    ];

    const insertedSuppliers = await db
      .collection('suppliers')
      .insertMany(suppliers);
    console.log('‚úÖ Created suppliers:', insertedSuppliers.insertedCount);

    // Create sample provinces
    const provinces = [
      { code: '01', name: 'Th√†nh ph·ªë H√† N·ªôi', type: 'Th√†nh ph·ªë Trung ∆∞∆°ng' },
      {
        code: '79',
        name: 'Th√†nh ph·ªë H·ªì Ch√≠ Minh',
        type: 'Th√†nh ph·ªë Trung ∆∞∆°ng',
      },
      { code: '31', name: 'T·ªânh H·∫£i Ph√≤ng', type: 'T·ªânh' },
      { code: '48', name: 'T·ªânh ƒê√† N·∫µng', type: 'Th√†nh ph·ªë Trung ∆∞∆°ng' },
      { code: '92', name: 'T·ªânh C·∫ßn Th∆°', type: 'Th√†nh ph·ªë Trung ∆∞∆°ng' },
    ];

    const insertedProvinces = await db
      .collection('provinces')
      .insertMany(provinces);
    console.log('‚úÖ Created provinces:', insertedProvinces.insertedCount);

    // Create sample districts for HCMC
    const hcmcProvince = await db
      .collection('provinces')
      .findOne({ code: '79' });
    if (hcmcProvince) {
      const districts = [
        {
          provinceId: hcmcProvince._id,
          code: '760',
          name: 'Qu·∫≠n 1',
          type: 'Qu·∫≠n',
        },
        {
          provinceId: hcmcProvince._id,
          code: '761',
          name: 'Qu·∫≠n 2',
          type: 'Qu·∫≠n',
        },
        {
          provinceId: hcmcProvince._id,
          code: '762',
          name: 'Qu·∫≠n 3',
          type: 'Qu·∫≠n',
        },
        {
          provinceId: hcmcProvince._id,
          code: '763',
          name: 'Qu·∫≠n 4',
          type: 'Qu·∫≠n',
        },
        {
          provinceId: hcmcProvince._id,
          code: '764',
          name: 'Qu·∫≠n 5',
          type: 'Qu·∫≠n',
        },
      ];

      const insertedDistricts = await db
        .collection('districts')
        .insertMany(districts);
      console.log('‚úÖ Created districts:', insertedDistricts.insertedCount);
    }

    console.log('üéâ Database seeding completed successfully!');
    console.log('\nüìã Sample accounts created:');
    console.log('Admin: admin@vncompare.com / admin123');
    console.log('Customer: customer@example.com / customer123');
  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
    process.exit(1);
  }
}

seedDatabase();
