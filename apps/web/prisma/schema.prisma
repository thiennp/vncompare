// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Users and Authentication
model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String?
  name        String?
  phone       String?
  role        String   @default("customer")
  createdAt   DateTime @default(now()) @map("created_at")
  lastLoginAt DateTime? @map("last_login_at")
  orders      Order[]
  addresses   Address[]
  reviews     Review[]

  @@map("users")
}

// Vietnam Address System
model Province {
  id       Int        @id @default(autoincrement())
  code     String     @unique
  name     String
  type     String
  districts District[]
  serviceAreas ServiceArea[]

  @@map("provinces")
}

model District {
  id         Int        @id @default(autoincrement())
  provinceId Int        @map("province_id")
  code       String     @unique
  name       String
  type       String
  province   Province   @relation(fields: [provinceId], references: [id])
  wards      Ward[]
  serviceAreas ServiceArea[]

  @@map("districts")
}

model Ward {
  id         Int        @id @default(autoincrement())
  districtId Int        @map("district_id")
  code       String     @unique
  name       String
  type       String
  district   District   @relation(fields: [districtId], references: [id])
  serviceAreas ServiceArea[]

  @@map("wards")
}

// Products and Pricing
model Product {
  id            Int               @id @default(autoincrement())
  name          String
  brand         String?
  category      String?
  description   String?
  basePrice     Float?            @map("base_price")
  originalPrice Float?            @map("original_price")
  coverageRate  Float?            @map("coverage_rate") // mÂ²/liter
  unit          String?
  isActive      Boolean           @default(true) @map("is_active")
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt @map("updated_at")
  coverage      ProductCoverage[]
  orders        Order[]
  orderItems    OrderItem[]
  reviews       Review[]

  @@unique([name])
  @@map("products")
}

model ProductCoverage {
  id            Int      @id @default(autoincrement())
  productId     Int      @map("product_id")
  surfaceType   String   @map("surface_type")
  coverageRate  Float    @map("coverage_rate")
  coatsRequired Int      @default(2) @map("coats_required")
  notes         String?
  product       Product  @relation(fields: [productId], references: [id])

  @@map("product_coverage")
}

// Suppliers and Service Areas
model Supplier {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  businessInfo String?        @map("business_info") // Changed from Json to String for SQLite
  contactInfo  String?        @map("contact_info")  // Changed from Json to String for SQLite
  isVerified   Boolean        @default(false) @map("is_verified")
  createdAt    DateTime       @default(now()) @map("created_at")
  shippingZones ShippingZone[]
  serviceAreas ServiceArea[]
  orders       Order[]

  @@map("suppliers")
}

model ShippingZone {
  id            Int           @id @default(autoincrement())
  supplierId    Int           @map("supplier_id")
  zoneName      String        @map("zone_name")
  baseRate      Float         @map("base_rate")
  weightFactor  Float         @map("weight_factor")
  distanceFactor Float        @map("distance_factor")
  deliveryDays  Int           @map("delivery_days")
  isActive      Boolean       @default(true) @map("is_active")
  supplier      Supplier      @relation(fields: [supplierId], references: [id])
  serviceAreas  ServiceArea[]

  @@map("shipping_zones")
}

model ServiceArea {
  id             Int          @id @default(autoincrement())
  supplierId     Int          @map("supplier_id")
  provinceId     Int          @map("province_id")
  districtId     Int?         @map("district_id")
  wardId         Int?         @map("ward_id")
  shippingZoneId Int          @map("shipping_zone_id")
  deliveryFee    Float        @map("delivery_fee")
  deliveryDays   Int          @map("delivery_days")
  supplier       Supplier     @relation(fields: [supplierId], references: [id])
  province       Province     @relation(fields: [provinceId], references: [id])
  district       District?    @relation(fields: [districtId], references: [id])
  ward           Ward?        @relation(fields: [wardId], references: [id])
  shippingZone   ShippingZone @relation(fields: [shippingZoneId], references: [id])

  @@map("service_areas")
}

// Orders and Analytics
model Order {
  id             Int         @id @default(autoincrement())
  userId         Int         @map("user_id")
  totalAmount    Float        @map("total_amount")
  status         String       @default("pending")
  paymentStatus  String       @default("pending") @map("payment_status")
  shippingAddress String      @map("shipping_address")
  createdAt      DateTime     @default(now()) @map("created_at")
  user           User         @relation(fields: [userId], references: [id])
  orderItems     OrderItem[]

  @@map("orders")
}

// Address Management
model Address {
  id        Int     @id @default(autoincrement())
  userId    Int     @map("user_id")
  name      String
  phone     String
  address   String
  province  String
  district  String
  ward      String
  isDefault Boolean @default(false) @map("is_default")
  createdAt DateTime @default(now()) @map("created_at")
  user      User    @relation(fields: [userId], references: [id])

  @@map("addresses")
}

// Product Reviews
model Review {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  productId Int      @map("product_id")
  rating    Int
  title     String
  comment   String
  status    String   @default("pending")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("reviews")
}

// Order Items
model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int     @map("order_id")
  productId Int     @map("product_id")
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
